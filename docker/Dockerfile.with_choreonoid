
## git clone -b fix_for_linux https://github.com/YoheiKakiuchi/vnoid.git

### with NVIDIA video-card   ###
## docker build -f docker/Dockerfile.with_choreonoid -t vnoid_with_choreonoid .
## docker/run_docker.sh

### without NVIDIA video-card ###
## docker build -f docker/Dockerfile.with_choreonoid -t vnoid_with_choreonoid_wo_nvidia --build-arg BASE_IMAGE=ubuntu:18.04 .
## docker/run_docker_wo_nvidia.sh

### with vnc (docker-compose) ###
## docker pull devrt/xserver
## git clone https://github.com/YoheiKakiuchi/misc_docker.git -b xserver_nvidia build_vnc
## (cd build_vnc; ./wrap_for_docker_xserver.sh vnoid_with_choreonoid_wo_nvidia --supervisor --default-command 'choreonoid /usr/local/share/choreonoid-1.8/project/vnoid_sample_project.cnoid' --user-directory /userdir )
## // you can share /userdir (local directory) with docker ( /userdir in docker )
## // install docker-compose (read build_vnc/README.md)
## docker-compose -f build_vnc/docker-compose.yaml -p vnoid up
## // open ppp.xxx.yyy.zzz:3000 with browser (ppp.xxx.yyy.zzz is IP address of PC on which you executed docker-compose)


ARG BASE_IMAGE=nvidia/opengl:1.2-glvnd-runtime-ubuntu18.04
FROM ${BASE_IMAGE}

SHELL ["/bin/bash", "-c"]
ENV DEBIAN_FRONTEND noninteractive

RUN apt-get update -y -q && \
    apt-get install -q -qq -y git sudo patch && \
    apt clean -q -y && \
    rm -rf /var/lib/apt/lists/

WORKDIR /choreonoid_build
### fix version(tag, revision)
RUN git clone --depth=1 https://github.com/choreonoid/choreonoid.git
##RUN git clone --depth=1 -b v1.7.0 https://github.com/choreonoid/choreonoid.git

RUN cd /choreonoid_build/choreonoid && \
    apt-get update -y -q && \
    echo "y" | ./misc/script/install-requisites-ubuntu-18.04.sh && \
    apt clean -q -y && \
    rm -rf /var/lib/apt/lists/

COPY . /choreonoid_build/choreonoid/vnoid

### build only choreonoid
#RUN cd /choreonoid_build/choreonoid && \
#    cmake . && \
#    make -j$(nproc) && \
#    make install

RUN cd /choreonoid_build/choreonoid && \
    cmake -DADDITIONAL_EXT_DIRECTORIES=vnoid . && \
    make -j$(nproc) && \
    make install

## DEBUG compile
#RUN cd /choreonoid_build/choreonoid && \
#    cmake -DCMAKE_VERBOSE_MAKEFILE=1 -DADDITIONAL_EXT_DIRECTORIES=vnoid . && \
#    VERBOSE=1 make -j1 && \
#    make install
